#ifndef INFERENCE_H_
#define INFERENCE_H_

{{#layers}}
#define l{{idx}}_size           {{size}}
{{#pad_right}}
#define l{{idx}}_pad_right      {{pad_right}}
{{/pad_right}}
{{^pad_right}}
#define l{{idx}}_pad_right      0x0
{{/pad_right}}
{{#pad_left}}
#define l{{idx}}_pad_left       {{pad_left}}
{{/pad_left}}
{{^pad_left}}
#define l{{idx}}_pad_left       0x0
{{/pad_left}}
{{#pad_bottom}}
#define l{{idx}}_pad_bottom     {{pad_bottom}}
{{/pad_bottom}}
{{^pad_bottom}}
#define l{{idx}}_pad_bottom     0x0
{{/pad_bottom}}
{{#pad_top}}
#define l{{idx}}_pad_top        {{pad_top}}
{{/pad_top}}
{{^pad_top}}
#define l{{idx}}_pad_top        0x0
{{/pad_top}}
{{#strides}}
#define l{{idx}}_strides        {{strides}}
{{/strides}}
{{^strides}}
#define l{{idx}}_strides        0x0
{{/strides}}
{{#pool_size}}
#define l{{idx}}_pool_size      {{pool_size}}
{{/pool_size}}
{{^pool_size}}
#define l{{idx}}_pool_size      0x0
{{/pool_size}}
{{#kernel_size}}
#define l{{idx}}_kernel_size    {{kernel_size}}
{{/kernel_size}}
{{^kernel_size}}
#define l{{idx}}_kernel_size    0x0
{{/kernel_size}}
{{#dilation_rate}}
#define l{{idx}}_dilation_rate  {{dilation_rate}}
{{/dilation_rate}}
{{^dilation_rate}}
#define l{{idx}}_dilation_rate  0x0
{{/dilation_rate}}
{{#nb_filters}}
#define l{{idx}}_nb_filters     {{nb_filters}}
{{/nb_filters}}
{{^nb_filters}}
#define l{{idx}}_nb_filters     0x0
{{/nb_filters}}
{{#input_height}}
#define l{{idx}}_input_height   {{input_height}}
{{/input_height}}
{{^input_height}}
#define l{{idx}}_input_height   0x0
{{/input_height}}
{{#input_width}}
#define l{{idx}}_input_width    {{input_width}}
{{/input_width}}
{{^input_width}}
#define l{{idx}}_input_width    0x0
{{/input_width}}
{{#input_channels}}
#define l{{idx}}_input_channels {{input_channels}}
{{/input_channels}}
{{^input_channels}}
#define l{{idx}}_input_channels 0x0
{{/input_channels}}
{{#output_height}}
#define l{{idx}}_output_height  {{output_height}}
{{/output_height}}
{{^output_height}}
#define l{{idx}}_output_height  0x0
{{/output_height}}
{{#output_width}}
#define l{{idx}}_output_width   {{output_width}}
{{/output_width}}
{{^output_width}}
#define l{{idx}}_output_width   0x0
{{/output_width}}

{{/layers}}

#define nb_layers     {{nb_layers}}
#define nb_params_max {{max_layer_params}}
#define l_size_max    {{max_layer_size}}

struct layer
{
    int (*layer_type)(int, float*, float*);
    const int layer_size;
    const int pad_right;
    const int pad_left;
    const int pad_bottom;
    const int pad_top;
    const int strides;
    const int pool_size;
    const int kernel_size;
    const int dilation_rate;
    const int nb_filters;
    const int input_channels;
    const int input_height;
    const int input_width;
    const int output_height;
    const int output_width;
    float *weights;
    float *biases;
    float (*actv_function)(float);
};

extern struct layer net[nb_layers];

int inference(float *prediction, float *nn_input);

#endif
